{"version":3,"sources":["background.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","props","nextStep","event","cell","target","dataset","col","isStepOnFlag","isStepOnMine","isEmptyCell","showMinesAround","isWon","setState","Set","state","userStepArr","sort","a","b","size","userFlagArr","length","join","minesArr","gameOver","neibourCellsArr","neighbourCells","countMinesAround","howMuchMinesAround","element","document","querySelector","includes","push","innerText","forEach","el","filter","reduce","acc","item","setFlag","preventDefault","countTable","arr","number","Math","floor","random","add","this","Array","from","style","backgroundImage","backUrl","className","onClick","e","onContextMenu","keys","map","data-col","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.752defab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.6ec2bab0.jpg\";","import React, { Component } from 'react';\nimport backUrl from './background.jpg';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tcountTable:10,\t\t\t\n\t\t\tminesArr:[],\n\t\t\t// minesArr:[8,19,29,42,50,67,70,77,89, 99],\n\t\t\tuserFlagArr: [],\n\t\t\tuserStepArr: [],\n\t\t\tgameOver:false,\n\t\t\tisWon: false,\t\t\t\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tconst arr = new Set();\n\t\twhile(arr.size<10){\n\t\t\tlet number = Math.floor(Math.random()*100 + 1);\n\t\t\tarr.add(number);\n\t\t}\n\t\tthis.setState({minesArr:Array.from(arr)});\n\t}\n\n\tnextStep = event => {\n\t\tconst cell = +event.target.dataset.col;\n\t\tif (this.isStepOnFlag(cell)) return;\n\t\tif (this.isStepOnMine(cell)) return;\t\t\n\t\tif (this.isEmptyCell(cell)) return;\t\t\n\t\tthis.showMinesAround(cell);\t\n\t\t\n\t\tthis.isWon();\t\t\n\t}\n\tisWon = () => {\t\n\t\tthis.setState({});\t\n\t\tif (new Set(this.state.userStepArr.sort((a,b)=>a-b)).size === 90 && \n\t\t\tthis.state.userFlagArr.length === 10){\n\t\t\t\tconst usersMines = this.state.userFlagArr.sort().join('');\n\t\t\t\tconst minesArr = this.state.minesArr.sort().join('');\t\t\n\t\t\t\tusersMines === minesArr ? this.setState({ isWon:true }) \n\t\t\t\t\t\t\t\t\t\t: this.setState({ gameOver:true });\n\t\t}\n\t\treturn\n\t}\n\tshowMinesAround = cell => {\t\t\n\t\tconst neibourCellsArr = this.neighbourCells(cell);\n\t\tconst countMinesAround = this.howMuchMinesAround(neibourCellsArr);\n\t\tconst element = document.querySelector(`div[data-col=\"${cell}\"]`);\n\t\tif (!this.state.userStepArr.includes(cell)) this.state.userStepArr.push(cell);\t\t\t\n\t\tif (countMinesAround !== 0) element.innerText = countMinesAround;\n\t\telse {\n\t\t\tneibourCellsArr.forEach( el => this.showMinesAround(el) )\n\t\t}\n\t}\n\t\n\tneighbourCells = cell => {\n\t\tlet neightbours;\n\t\tif (cell%10 === 9 || cell === 9) neightbours = [cell-1,cell-11,cell-10,cell+9,cell+10]; \n\t\telse if (cell%10 === 0) neightbours = [cell-10,cell-9,cell+1,cell+10,cell+11]; \t\t\n\t\telse neightbours = [cell+1,cell-1,cell-11,cell-10,cell-9,cell+9,cell+10,cell+11];  \n\t\treturn neightbours.filter( el => !this.state.userStepArr.includes(el) && el >= 0 && el < 100 )   \n\t}\n\n\thowMuchMinesAround = neighbourCells => {\t\t\n\t\treturn this.state.minesArr.reduce( (acc,item) => neighbourCells.includes(item) ? acc+=1 : acc, 0 )\n\t}\n\n\tisStepOnMine = cell => {\t\t\n\t\tif (this.state.minesArr.includes(cell)){\n\t\t\tthis.setState({ userStepArr:[...this.state.userStepArr, cell] });\n\t\t\tthis.setState({ gameOver:true });\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tisStepOnFlag = cell => {\t\t\n\t\tif (this.state.userFlagArr.includes(cell)){\t\t\t\n\t\t\tthis.setState({ userFlagArr: this.state.userFlagArr.filter(el => el !== cell) })\n\t\t\treturn true;\t\t \t\t\t\n\t\t}\n\t\treturn false\n\t}\n\n\tisEmptyCell = cell => {\t\t\n\t\treturn this.state.userStepArr.includes(cell)\n\t}\n\n\tsetFlag = event => {\n\t\tevent.preventDefault();\t\t\t\t\n\t\t// this.setState({ userFlagArr: [...this.state.userFlagArr, +event.target.dataset.col] });\n\t\tthis.state.userFlagArr.push(+event.target.dataset.col)\n\t\tthis.isWon();\t\t\n\t}\n\n\trender(){\t\t\n\t\treturn (<div style = {{backgroundImage: `url(${ backUrl })`}} className = \"back\">\n\t\t\t\t\t<span className = \"title\">MinesWeeper</span>\n\t\t\t\t\t<span className = \"subtitle\">Дню рождения Геннадича посвещается</span>\n\t\t\t\t\t<div className = \"field-wrap\">\n\t\t\t\t\t\t<div className=\"field\" \tonClick = { e => !this.state.gameOver && this.nextStep(e) } \n\t\t\t\t\t\t\t\t\t\t\tonContextMenu = { e => !this.state.gameOver && this.setFlag(e) }>\n\t\t\t\t\t\t\t{[...Array(100).keys()].map( item => {\n\t\t\t\t\t\t\t\treturn\t\t<div  \tclassName = {  this.state.userFlagArr.includes(item) ?  \"flag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: this.state.userStepArr.includes(item) && this.state.minesArr.includes(item) ?  \"step-on-mine\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:  this.state.userStepArr.includes(item) ? \"user-step\" : \"field-item\"}\n\t\t\t\t\t\t\t\t\t\t\t\tdata-col = { item } \n\t\t\t\t\t\t\t\t\t\t\t\tkey = { item }>\n\t\t\t\t\t\t\t\t\t\t</div>})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{this.state.isWon && <div className = \"result\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span>You are MAN!</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t{this.state.gameOver && <div className = \"result\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>опять обосрался...</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t);\n\t}  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}